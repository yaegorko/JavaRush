package com.javarush.task.task16.task1632;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import static java.lang.Integer.getInteger;

public class Solution {
    public static List<Thread> threads = new ArrayList<>(5);

    static {
        threads.add(new Thread(new Thread1()));
        threads.add(new Thread(new Thread2()));
        threads.add(new Thread(new Thread3()));
        threads.add(new Thread4());
        threads.add(new Thread(new Thread5()));
    }

    public static void main(String[] args) throws InterruptedException {
        for (Thread th : threads)
            th.start();
        //threads.get(4).start();
    }



    public static class Thread1 implements Runnable {
        @Override
        public void run() {
            while (true){}
        }
    }

    public static class Thread2 implements Runnable {
        @Override
        public void run() {
            while (true) {
                try {
                    Thread.sleep(10000);
                    throw new InterruptedException();
                } catch (InterruptedException x) {
                    System.out.println("InterruptedException");
                    break;
                }
            }
        }
    }

    public static class Thread3 implements Runnable {
        @Override
        public void run() {
            while (true) {
                try {

                    System.out.println("Ура");
                    Thread.sleep(500);

                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    public static class Thread4 extends Thread implements  Message{
        @Override
        public void showWarning() {
            Thread.currentThread().interrupt();
        }

        @Override
        public void run() {
            while (true)
                showWarning();
        }
    }

    public static class Thread5 implements Runnable{

        @Override
        public void run() {
            String marker = null;
            int sum = 0;
            int buf = 0;
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
                while (true) {
                    try {
                        marker = reader.readLine();
                        try {
                            buf = Integer.parseInt(marker);
                        } catch (NumberFormatException y){

                        }
                    } catch (IOException e) {
                       e.printStackTrace();
                    }
                    if (marker.equals("N"))
                        break;

                    sum += buf;
                }
                System.out.println(sum);
        }
    }
}



